/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
'use client'
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import React, { useRef } from "react";
// import { fadeOnBeforeCompile } from "./utils/fadeMaterial";
import dynamic from "next/dynamic";
const fadeOnBeforeCompile = dynamic(() => import("./utils/fadeMaterial"), { ssr: false });

const Island = ({ sceneOpacity, ...props }) => {
  const { nodes } = useGLTF("./models/island/island.glb");

  const materialRef = useRef();

  useFrame(() => {
    materialRef.current.opacity = sceneOpacity.current;
  })

  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Island.geometry}>
        <meshStandardMaterial
          ref={materialRef}
          onBeforeCompile={fadeOnBeforeCompile}
          envMapIntensity={2}
          transparent
        />
      </mesh>
    </group>
  );
}

useGLTF.preload("./models/island/island.glb");

export default Island