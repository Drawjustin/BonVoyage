{"version":3,"sources":["assets/images/openvidu_logo.png","components/chat/ChatComponent.js","components/dialog-extension/DialogExtension.js","components/stream/OvVideo.js","components/stream/StreamComponent.js","layout/openvidu-layout.js","models/user-model.js","components/toolbar/ToolbarComponent.js","components/VideoRoomComponent.js","registerServiceWorker.js","index.js"],"names":["module","exports","ChatComponent","props","state","messageList","message","chatScroll","React","createRef","handleChange","bind","handlePressKey","close","sendMessage","this","user","getStreamManager","stream","session","on","event","data","JSON","parse","push","connectionId","from","nickname","document","window","setTimeout","userImg","getElementById","length","video","streamId","getContext","drawImage","messageReceived","setState","scrollToBottom","target","value","key","console","log","replace","getNickname","signal","stringify","type","current","scrollTop","scrollHeight","err","undefined","styleChat","display","chatDisplay","id","style","sessionId","IconButton","onClick","color","className","ref","map","i","getConnectionId","width","height","placeholder","onChange","onKeyPress","Tooltip","title","Fab","size","Component","DialogExtensionComponent","openviduExtensionUrl","isInstalled","goToChromePage","onNoClick","refreshBrowser","cancelClicked","open","location","reload","showDialog","Card","CardContent","Typography","CardActions","Button","OvVideoComponent","videoRef","streamManager","addVideoElement","isScreenShareActive","autoPlay","muted","mutedSound","StreamComponent","showForm","isFormValid","toggleNicknameForm","toggleSound","preventDefault","isLocal","handleNickname","FormControl","InputLabel","htmlFor","Input","required","FormHelperText","isVideoActive","isAudioActive","OpenViduLayout","elem","sub","querySelector","oldWidth","x","y","animate","targetPosition","left","top","fixAspectRatio","$","stop","duration","easing","complete","call","css","videoHeight","videoWidth","prop","cssStr","parseInt","Math","random","toFixed","heightStr","widthStr","minR","maxR","count","WIDTH","HEIGHT","targetHeight","maxArea","targetCols","targetRows","targetWidth","tWidth","tHeight","tRatio","colsAux","rowsAux","ceil","floor","area","ratio","children","offsetLeft","offsetTop","fixedRatio","minRatio","maxRatio","dimensions","getVideoRatio","getBestDimensions","row","rows","totalRowHeight","remainingShortRows","remainingHeightDiff","extraHeight","j","position","actualWidth","getCSSNumber","actualHeight","positionElement","element","layoutContainer","cheapUUID","bigWidth","bigHeight","getHeight","getWidth","availableRatio","bigOffsetTop","bigOffsetLeft","bigOnes","Array","prototype","filter","querySelectorAll","opts","bigClass","filterDisplayNone","smallOnes","bigPercentage","bigFirst","arrange","bigFixedRatio","bigMinRatio","bigMaxRatio","container","options","UserModel","audioActive","videoActive","screenShareActive","conecctionId","logo","require","ToolbarComponent","fullscreen","camStatusChanged","micStatusChanged","screenShare","stopScreenShare","toggleFullscreen","switchCamera","leaveSession","toggleChat","mySessionId","localUser","AppBar","Toolbar","alt","src","showNotification","VideoRoomComponent","hasBeenUpdated","layout","sessionName","userName","remotes","localUserAccessAllowed","myUserName","subscribers","currentVideoDevice","joinSession","onbeforeunload","updateLayout","nicknameChanged","closeDialogExtension","checkNotification","checkSize","initLayoutContainer","addEventListener","removeEventListener","OV","OpenVidu","initSession","a","subscribeToStreamCreated","connectToSession","token","connect","getToken","error","code","messgae","status","alert","clientData","then","connectWebCam","catch","getUserMedia","audioSource","videoSource","getDevices","devices","videoDevices","device","kind","publisher","initPublisher","deviceId","publishAudio","publishVideo","resolution","frameRate","insertMode","capabilities","publish","updateSubscribers","setNickname","setConnectionId","connection","setScreenShareActive","setStreamManager","subscribeToUserChanged","subscribeToStreamDestroyed","sendSignalUserChanged","e","videos","parentElement","classList","remove","mySession","disconnect","setVideoActive","setAudioActive","remoteUsers","userStream","index","indexOf","splice","subscriber","subscribe","checkSomeoneShareScreen","newUser","setType","split","deleteSubscriber","forEach","signalOptions","fs","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","newVideoDevice","newPublisher","mirror","unpublish","navigator","userAgent","name","showExtensionDialog","once","openviduLayoutOptions","some","setLayoutOptions","property","offsetWidth","createSession","createToken","axios","post","process","customSessionId","headers","response","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","URL","origin","fetch","get","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ef51bba1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/openvidu_logo.4af4a556.png\";","import React, { Component } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport HighlightOff from '@material-ui/icons/HighlightOff';\r\nimport Send from '@material-ui/icons/Send';\r\n\r\nimport './ChatComponent.css';\r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nexport default class ChatComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            messageList: [],\r\n            message: '',\r\n        };\r\n        this.chatScroll = React.createRef();\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handlePressKey = this.handlePressKey.bind(this);\r\n        this.close = this.close.bind(this);\r\n        this.sendMessage = this.sendMessage.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.user.getStreamManager().stream.session.on('signal:chat', (event) => {\r\n            const data = JSON.parse(event.data);\r\n            let messageList = this.state.messageList;\r\n            messageList.push({ connectionId: event.from.connectionId, nickname: data.nickname, message: data.message });\r\n            const document = window.document;\r\n            setTimeout(() => {\r\n                const userImg = document.getElementById('userImg-' + (this.state.messageList.length - 1));\r\n                const video = document.getElementById('video-' + data.streamId);\r\n                const avatar = userImg.getContext('2d');\r\n                avatar.drawImage(video, 200, 120, 285, 285, 0, 0, 60, 60);\r\n                this.props.messageReceived();\r\n            }, 50);\r\n            this.setState({ messageList: messageList });\r\n            this.scrollToBottom();\r\n        });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ message: event.target.value });\r\n    }\r\n\r\n    handlePressKey(event) {\r\n        if (event.key === 'Enter') {\r\n            this.sendMessage();\r\n        }\r\n    }\r\n\r\n    sendMessage() {\r\n        console.log(this.state.message);\r\n        if (this.props.user && this.state.message) {\r\n            let message = this.state.message.replace(/ +(?= )/g, '');\r\n            if (message !== '' && message !== ' ') {\r\n                const data = { message: message, nickname: this.props.user.getNickname(), streamId: this.props.user.getStreamManager().stream.streamId };\r\n                this.props.user.getStreamManager().stream.session.signal({\r\n                    data: JSON.stringify(data),\r\n                    type: 'chat',\r\n                });\r\n            }\r\n        }\r\n        this.setState({ message: '' });\r\n    }\r\n\r\n    scrollToBottom() {\r\n        setTimeout(() => {\r\n            try {\r\n                this.chatScroll.current.scrollTop = this.chatScroll.current.scrollHeight;\r\n            } catch (err) {}\r\n        }, 20);\r\n    }\r\n\r\n    close() {\r\n        this.props.close(undefined);\r\n    }\r\n\r\n    render() {\r\n        const styleChat = { display: this.props.chatDisplay };\r\n        return (\r\n            <div id=\"chatContainer\">\r\n                <div id=\"chatComponent\" style={styleChat}>\r\n                    <div id=\"chatToolbar\">\r\n                        <span>{this.props.user.getStreamManager().stream.session.sessionId} - CHAT</span>\r\n                        <IconButton id=\"closeButton\" onClick={this.close}>\r\n                            <HighlightOff color=\"secondary\" />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className=\"message-wrap\" ref={this.chatScroll}>\r\n                        {this.state.messageList.map((data, i) => (\r\n                            <div\r\n                                key={i}\r\n                                id=\"remoteUsers\"\r\n                                className={\r\n                                    'message' + (data.connectionId !== this.props.user.getConnectionId() ? ' left' : ' right')\r\n                                }\r\n                            >\r\n                                <canvas id={'userImg-' + i} width=\"60\" height=\"60\" className=\"user-img\" />\r\n                                <div className=\"msg-detail\">\r\n                                    <div className=\"msg-info\">\r\n                                        <p> {data.nickname}</p>\r\n                                    </div>\r\n                                    <div className=\"msg-content\">\r\n                                        <span className=\"triangle\" />\r\n                                        <p className=\"text\">{data.message}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <div id=\"messageInput\">\r\n                        <input\r\n                            placeholder=\"Send a messge\"\r\n                            id=\"chatInput\"\r\n                            value={this.state.message}\r\n                            onChange={this.handleChange}\r\n                            onKeyPress={this.handlePressKey}\r\n                        />\r\n                        <Tooltip title=\"Send message\">\r\n                            <Fab size=\"small\" id=\"sendButton\" onClick={this.sendMessage}>\r\n                                <Send />\r\n                            </Fab>\r\n                        </Tooltip>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport './DialogExtension.css';\r\n\r\nexport default class DialogExtensionComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.openviduExtensionUrl =\r\n            'https://chrome.google.com/webstore/detail/openvidu-screensharing/lfcgfepafnobdloecchnfaclibenjold';\r\n        //isInstalled: boolean;\r\n\r\n        this.state = {\r\n            isInstalled: false,\r\n        };\r\n        this.goToChromePage = this.goToChromePage.bind(this);\r\n        this.onNoClick = this.onNoClick.bind(this);\r\n        this.refreshBrowser = this.refreshBrowser.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(props) {}\r\n\r\n    componentDidMount() {}\r\n\r\n    onNoClick() {\r\n        // this.cancel.emit();\r\n        this.props.cancelClicked();\r\n    }\r\n\r\n    goToChromePage() {\r\n        window.open(this.openviduExtensionUrl);\r\n        this.setState({ isInstalled: true });\r\n    }\r\n\r\n    refreshBrowser() {\r\n        window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props && this.props.showDialog ? (\r\n                    <div id=\"dialogExtension\">\r\n                        <Card id=\"card\">\r\n                            <CardContent>\r\n                                <Typography color=\"textSecondary\">Hello</Typography>\r\n                                <Typography color=\"textSecondary\">\r\n                                    You need install this chrome extension and refresh the browser for can share your screen.\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button size=\"small\" onClick={this.onNoClick}>\r\n                                    Cancel\r\n                                </Button>\r\n\r\n                                <Button size=\"small\" onClick={this.goToChromePage}>\r\n                                    Install\r\n                                </Button>\r\n                                {this.state.isInstalled ? (\r\n                                    <Button size=\"small\" onClick={this.refreshBrowser}>\r\n                                        Refresh\r\n                                    </Button>\r\n                                ) : null}\r\n                            </CardActions>\r\n                        </Card>\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './StreamComponent.css';\r\n\r\nexport default class OvVideoComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.videoRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props && this.props.user.streamManager && !!this.videoRef) {\r\n            console.log('PROPS: ', this.props);\r\n            this.props.user.getStreamManager().addVideoElement(this.videoRef.current);\r\n        }\r\n\r\n        if (this.props && this.props.user.streamManager.session && this.props.user && !!this.videoRef) {\r\n            this.props.user.streamManager.session.on('signal:userChanged', (event) => {\r\n                const data = JSON.parse(event.data);\r\n                if (data.isScreenShareActive !== undefined) {\r\n                    this.props.user.getStreamManager().addVideoElement(this.videoRef.current);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(props) {\r\n        if (props && !!this.videoRef) {\r\n            this.props.user.getStreamManager().addVideoElement(this.videoRef.current);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <video\r\n                autoPlay={true}\r\n                id={'video-' + this.props.user.getStreamManager().stream.streamId}\r\n                ref={this.videoRef}\r\n                muted={this.props.mutedSound}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './StreamComponent.css';\r\nimport OvVideoComponent from './OvVideo';\r\n\r\nimport MicOff from '@material-ui/icons/MicOff';\r\nimport VideocamOff from '@material-ui/icons/VideocamOff';\r\nimport VolumeUp from '@material-ui/icons/VolumeUp';\r\nimport VolumeOff from '@material-ui/icons/VolumeOff';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport HighlightOff from '@material-ui/icons/HighlightOff';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nexport default class StreamComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { nickname: this.props.user.getNickname(), showForm: false, mutedSound: false, isFormValid: true };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handlePressKey = this.handlePressKey.bind(this);\r\n        this.toggleNicknameForm = this.toggleNicknameForm.bind(this);\r\n        this.toggleSound = this.toggleSound.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ nickname: event.target.value });\r\n        event.preventDefault();\r\n    }\r\n\r\n    toggleNicknameForm() {\r\n        if (this.props.user.isLocal()) {\r\n            this.setState({ showForm: !this.state.showForm });\r\n        }\r\n    }\r\n\r\n    toggleSound() {\r\n        this.setState({ mutedSound: !this.state.mutedSound });\r\n    }\r\n\r\n    handlePressKey(event) {\r\n        if (event.key === 'Enter') {\r\n            console.log(this.state.nickname);\r\n            if (this.state.nickname.length >= 3 && this.state.nickname.length <= 20) {\r\n                this.props.handleNickname(this.state.nickname);\r\n                this.toggleNicknameForm();\r\n                this.setState({ isFormValid: true });\r\n            } else {\r\n                this.setState({ isFormValid: false });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"OT_widget-container\">\r\n                <div className=\"pointer nickname\">\r\n                    {this.state.showForm ? (\r\n                        <FormControl id=\"nicknameForm\">\r\n                            <IconButton color=\"inherit\" id=\"closeButton\" onClick={this.toggleNicknameForm}>\r\n                                <HighlightOff />\r\n                            </IconButton>\r\n                            <InputLabel htmlFor=\"name-simple\" id=\"label\">\r\n                                Nickname\r\n                            </InputLabel>\r\n                            <Input\r\n                                color=\"inherit\"\r\n                                id=\"input\"\r\n                                value={this.state.nickname}\r\n                                onChange={this.handleChange}\r\n                                onKeyPress={this.handlePressKey}\r\n                                required\r\n                            />\r\n                            {!this.state.isFormValid && this.state.nickname.length <= 3 && (\r\n                                <FormHelperText id=\"name-error-text\">Nickname is too short!</FormHelperText>\r\n                            )}\r\n                            {!this.state.isFormValid && this.state.nickname.length >= 20 && (\r\n                                <FormHelperText id=\"name-error-text\">Nickname is too long!</FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                    ) : (\r\n                        <div onClick={this.toggleNicknameForm}>\r\n                            <span id=\"nickname\">{this.props.user.getNickname()}</span>\r\n                            {this.props.user.isLocal() && <span id=\"\"> (edit)</span>}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                {this.props.user !== undefined && this.props.user.getStreamManager() !== undefined ? (\r\n                    <div className=\"streamComponent\">\r\n                        <OvVideoComponent user={this.props.user} mutedSound={this.state.mutedSound} />\r\n                        <div id=\"statusIcons\">\r\n                            {!this.props.user.isVideoActive() ? (\r\n                                <div id=\"camIcon\">\r\n                                    <VideocamOff id=\"statusCam\" />\r\n                                </div>\r\n                            ) : null}\r\n\r\n                            {!this.props.user.isAudioActive() ? (\r\n                                <div id=\"micIcon\">\r\n                                    <MicOff id=\"statusMic\" />\r\n                                </div>\r\n                            ) : null}\r\n                        </div>\r\n                        <div>\r\n                            {!this.props.user.isLocal() && (\r\n                                <IconButton id=\"volumeButton\" onClick={this.toggleSound}>\r\n                                    {this.state.mutedSound ? <VolumeOff color=\"secondary\" /> : <VolumeUp />}\r\n                                </IconButton>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import $ from 'jquery';\r\n\r\nclass OpenViduLayout {\r\n  layoutContainer;\r\n  opts ;\r\n\r\n  fixAspectRatio(elem, width) {\r\n    const sub = elem.querySelector('.OT_root');\r\n    if (sub) {\r\n      // If this is the parent of a subscriber or publisher then we need\r\n      // to force the mutation observer on the publisher or subscriber to\r\n      // trigger to get it to fix it's layout\r\n      const oldWidth = sub.style.width;\r\n      sub.style.width = width + 'px';\r\n      // sub.style.height = height + 'px';\r\n      sub.style.width = oldWidth || '';\r\n    }\r\n  }\r\n\r\n positionElement(elem, x, y, width, height, animate) {\r\n    const targetPosition = {\r\n      left: x + 'px',\r\n      top: y + 'px',\r\n      width: width + 'px',\r\n      height: height + 'px',\r\n    };\r\n\r\n    this.fixAspectRatio(elem, width);\r\n\r\n    if (animate && $) {\r\n      $(elem).stop();\r\n      $(elem).animate(targetPosition, animate.duration || 200, animate.easing || 'swing', () => {\r\n        this.fixAspectRatio(elem, width);\r\n        if (animate.complete) {\r\n          animate.complete.call(this);\r\n        }\r\n      });\r\n    } else {\r\n      $(elem).css(targetPosition);\r\n    }\r\n    this.fixAspectRatio(elem, width);\r\n  }\r\n\r\n  getVideoRatio(elem) {\r\n    if (!elem) {\r\n      return 3 / 4;\r\n    }\r\n    const video = elem.querySelector('video');\r\n    if (video && video.videoHeight && video.videoWidth) {\r\n      return video.videoHeight / video.videoWidth;\r\n    } else if (elem.videoHeight && elem.videoWidth) {\r\n      return elem.videoHeight / elem.videoWidth;\r\n    }\r\n    return 3 / 4;\r\n  }\r\n\r\n   getCSSNumber(elem, prop) {\r\n    const cssStr = $(elem).css(prop);\r\n    return cssStr ? parseInt(cssStr, 10) : 0;\r\n  }\r\n\r\n  // Really cheap UUID function\r\n   cheapUUID() {\r\n    return (Math.random() * 100000000).toFixed(0);\r\n  }\r\n\r\n   getHeight(elem) {\r\n    const heightStr = $(elem).css('height');\r\n    return heightStr ? parseInt(heightStr, 10) : 0;\r\n  }\r\n\r\n   getWidth(elem) {\r\n    const widthStr = $(elem).css('width');\r\n    return widthStr ? parseInt(widthStr, 10) : 0;\r\n  }\r\n\r\n   getBestDimensions(minR , maxR , count , WIDTH, HEIGHT, targetHeight) {\r\n    let maxArea, targetCols, targetRows, targetWidth, tWidth, tHeight, tRatio;\r\n\r\n    // Iterate through every possible combination of rows and columns\r\n    // and see which one has the least amount of whitespace\r\n    for (let i = 1; i <= count; i++) {\r\n      const colsAux = i;\r\n      const rowsAux = Math.ceil(count / colsAux);\r\n\r\n      // Try taking up the whole height and width\r\n      tHeight = Math.floor(HEIGHT / rowsAux);\r\n      tWidth = Math.floor(WIDTH / colsAux);\r\n\r\n      tRatio = tHeight / tWidth;\r\n      if (tRatio > maxR) {\r\n        // We went over decrease the height\r\n        tRatio = maxR;\r\n        tHeight = tWidth * tRatio;\r\n      } else if (tRatio < minR) {\r\n        // We went under decrease the width\r\n        tRatio = minR;\r\n        tWidth = tHeight / tRatio;\r\n      }\r\n\r\n      const area = tWidth * tHeight * count;\r\n\r\n      // If this width and height takes up the most space then we're going with that\r\n      if (maxArea === undefined || area > maxArea) {\r\n        maxArea = area;\r\n        targetHeight = tHeight;\r\n        targetWidth = tWidth;\r\n        targetCols = colsAux;\r\n        targetRows = rowsAux;\r\n      }\r\n    }\r\n    return {\r\n      maxArea: maxArea,\r\n      targetCols: targetCols,\r\n      targetRows: targetRows,\r\n      targetHeight: targetHeight,\r\n      targetWidth: targetWidth,\r\n      ratio: targetHeight / targetWidth,\r\n    };\r\n  }\r\n\r\n   arrange(\r\n    children,\r\n    WIDTH,\r\n    HEIGHT,\r\n    offsetLeft,\r\n    offsetTop,\r\n    fixedRatio,\r\n    minRatio,\r\n    maxRatio,\r\n    animate,\r\n  ) {\r\n    let targetHeight;\r\n\r\n    const count = children.length;\r\n    let dimensions;\r\n\r\n    if (!fixedRatio) {\r\n      dimensions = this.getBestDimensions(minRatio, maxRatio, count, WIDTH, HEIGHT, targetHeight);\r\n    } else {\r\n      // Use the ratio of the first video element we find to approximate\r\n      const ratio = this.getVideoRatio(children.length > 0 ? children[0] : null);\r\n      dimensions = this.getBestDimensions(ratio, ratio, count, WIDTH, HEIGHT, targetHeight);\r\n    }\r\n\r\n    // Loop through each stream in the container and place it inside\r\n    let x = 0,\r\n      y = 0;\r\n    const rows = [];\r\n    let row;\r\n    // Iterate through the children and create an array with a new item for each row\r\n    // and calculate the width of each row so that we know if we go over the size and need\r\n    // to adjust\r\n    for (let i = 0; i < children.length; i++) {\r\n      if (i % dimensions.targetCols === 0) {\r\n        // This is a new row\r\n        row = {\r\n          children: [],\r\n          width: 0,\r\n          height: 0,\r\n        };\r\n        rows.push(row);\r\n      }\r\n      const elem = children[i];\r\n      row.children.push(elem);\r\n      let targetWidth = dimensions.targetWidth;\r\n      targetHeight = dimensions.targetHeight;\r\n      // If we're using a fixedRatio then we need to set the correct ratio for this element\r\n      if (fixedRatio) {\r\n        targetWidth = targetHeight / this.getVideoRatio(elem);\r\n      }\r\n      row.width += targetWidth;\r\n      row.height = targetHeight;\r\n    }\r\n    // Calculate total row height adjusting if we go too wide\r\n    let totalRowHeight = 0;\r\n    let remainingShortRows = 0;\r\n    for (let i = 0; i < rows.length; i++) {\r\n      row = rows[i];\r\n      if (row.width > WIDTH) {\r\n        // Went over on the width, need to adjust the height proportionally\r\n        row.height = Math.floor(row.height * (WIDTH / row.width));\r\n        row.width = WIDTH;\r\n      } else if (row.width < WIDTH) {\r\n        remainingShortRows += 1;\r\n      }\r\n      totalRowHeight += row.height;\r\n    }\r\n    if (totalRowHeight < HEIGHT && remainingShortRows > 0) {\r\n      // We can grow some of the rows, we're not taking up the whole height\r\n      let remainingHeightDiff = HEIGHT - totalRowHeight;\r\n      totalRowHeight = 0;\r\n      for (let i = 0; i < rows.length; i++) {\r\n        row = rows[i];\r\n        if (row.width < WIDTH) {\r\n          // Evenly distribute the extra height between the short rows\r\n          let extraHeight = remainingHeightDiff / remainingShortRows;\r\n          if (extraHeight / row.height > (WIDTH - row.width) / row.width) {\r\n            // We can't go that big or we'll go too wide\r\n            extraHeight = Math.floor((WIDTH - row.width) / row.width * row.height);\r\n          }\r\n          row.width += Math.floor(extraHeight / row.height * row.width);\r\n          row.height += extraHeight;\r\n          remainingHeightDiff -= extraHeight;\r\n          remainingShortRows -= 1;\r\n        }\r\n        totalRowHeight += row.height;\r\n      }\r\n    }\r\n    // vertical centering\r\n    y = (HEIGHT - totalRowHeight) / 2;\r\n    // Iterate through each row and place each child\r\n    for (let i = 0; i < rows.length; i++) {\r\n      row = rows[i];\r\n      // center the row\r\n      const rowMarginLeft = (WIDTH - row.width) / 2;\r\n      x = rowMarginLeft;\r\n      for (let j = 0; j < row.children.length; j++) {\r\n        const elem = row.children[j];\r\n\r\n        let targetWidth = dimensions.targetWidth;\r\n        targetHeight = row.height;\r\n        // If we're using a fixedRatio then we need to set the correct ratio for this element\r\n        if (fixedRatio) {\r\n          targetWidth = Math.floor(targetHeight / this.getVideoRatio(elem));\r\n        }\r\n        elem.style.position = 'absolute';\r\n        // $(elem).css('position', 'absolute');\r\n        const actualWidth =\r\n          targetWidth -\r\n          this.getCSSNumber(elem, 'paddingLeft') -\r\n          this.getCSSNumber(elem, 'paddingRight') -\r\n          this.getCSSNumber(elem, 'marginLeft') -\r\n          this.getCSSNumber(elem, 'marginRight') -\r\n          this.getCSSNumber(elem, 'borderLeft') -\r\n          this.getCSSNumber(elem, 'borderRight');\r\n\r\n        const actualHeight =\r\n          targetHeight -\r\n          this.getCSSNumber(elem, 'paddingTop') -\r\n          this.getCSSNumber(elem, 'paddingBottom') -\r\n          this.getCSSNumber(elem, 'marginTop') -\r\n          this.getCSSNumber(elem, 'marginBottom') -\r\n          this.getCSSNumber(elem, 'borderTop') -\r\n          this.getCSSNumber(elem, 'borderBottom');\r\n\r\n        this.positionElement(elem, x + offsetLeft, y + offsetTop, actualWidth, actualHeight, animate);\r\n        x += targetWidth;\r\n      }\r\n      y += targetHeight;\r\n    }\r\n  }\r\n\r\n filterDisplayNone(element) {\r\n    return element.style.display !== 'none';\r\n  }\r\n\r\n  updateLayout() {\r\n    if (this.layoutContainer.style.display === 'none') {\r\n      return;\r\n    }\r\n    let id = this.layoutContainer.id;\r\n    if (!id) {\r\n      id = 'OT_' + this.cheapUUID();\r\n      this.layoutContainer.id = id;\r\n    }\r\n\r\n    const HEIGHT =\r\n      this.getHeight(this.layoutContainer) -\r\n      this.getCSSNumber(this.layoutContainer, 'borderTop') -\r\n      this.getCSSNumber(this.layoutContainer, 'borderBottom');\r\n    const WIDTH =\r\n      this.getWidth(this.layoutContainer) -\r\n      this.getCSSNumber(this.layoutContainer, 'borderLeft') -\r\n      this.getCSSNumber(this.layoutContainer, 'borderRight');\r\n\r\n    const availableRatio = HEIGHT / WIDTH;\r\n\r\n    let offsetLeft = 0;\r\n    let offsetTop = 0;\r\n    let bigOffsetTop = 0;\r\n    let bigOffsetLeft = 0;\r\n\r\n    const bigOnes = Array.prototype.filter.call(\r\n      this.layoutContainer.querySelectorAll('#' + id + '>.' + this.opts.bigClass),\r\n      this.filterDisplayNone,\r\n    );\r\n    const smallOnes = Array.prototype.filter.call(\r\n      this.layoutContainer.querySelectorAll('#' + id + '>*:not(.' + this.opts.bigClass + ')'),\r\n      this.filterDisplayNone,\r\n    );\r\n\r\n    if (bigOnes.length > 0 && smallOnes.length > 0) {\r\n      let bigWidth, bigHeight;\r\n\r\n      if (availableRatio > this.getVideoRatio(bigOnes[0])) {\r\n        // We are tall, going to take up the whole width and arrange small\r\n        // guys at the bottom\r\n        bigWidth = WIDTH;\r\n        bigHeight = Math.floor(HEIGHT * this.opts.bigPercentage);\r\n        offsetTop = bigHeight;\r\n        bigOffsetTop = HEIGHT - offsetTop;\r\n      } else {\r\n        // We are wide, going to take up the whole height and arrange the small\r\n        // guys on the right\r\n        bigHeight = HEIGHT;\r\n        bigWidth = Math.floor(WIDTH * this.opts.bigPercentage);\r\n        offsetLeft = bigWidth;\r\n        bigOffsetLeft = WIDTH - offsetLeft;\r\n      }\r\n      if (this.opts.bigFirst) {\r\n        this.arrange(\r\n          bigOnes,\r\n          bigWidth,\r\n          bigHeight,\r\n          0,\r\n          0,\r\n          this.opts.bigFixedRatio,\r\n          this.opts.bigMinRatio,\r\n          this.opts.bigMaxRatio,\r\n          this.opts.animate,\r\n        );\r\n        this.arrange(\r\n          smallOnes,\r\n          WIDTH - offsetLeft,\r\n          HEIGHT - offsetTop,\r\n          offsetLeft,\r\n          offsetTop,\r\n          this.opts.fixedRatio,\r\n          this.opts.minRatio,\r\n          this.opts.maxRatio,\r\n          this.opts.animate,\r\n        );\r\n      } else {\r\n        this.arrange(\r\n          smallOnes,\r\n          WIDTH - offsetLeft,\r\n          HEIGHT - offsetTop,\r\n          0,\r\n          0,\r\n          this.opts.fixedRatio,\r\n          this.opts.minRatio,\r\n          this.opts.maxRatio,\r\n          this.opts.animate,\r\n        );\r\n        this.arrange(\r\n          bigOnes,\r\n          bigWidth,\r\n          bigHeight,\r\n          bigOffsetLeft,\r\n          bigOffsetTop,\r\n          this.opts.bigFixedRatio,\r\n          this.opts.bigMinRatio,\r\n          this.opts.bigMaxRatio,\r\n          this.opts.animate,\r\n        );\r\n      }\r\n    } else if (bigOnes.length > 0 && smallOnes.length === 0) {\r\n      this\r\n        // We only have one bigOne just center it\r\n        .arrange(\r\n          bigOnes,\r\n          WIDTH,\r\n          HEIGHT,\r\n          0,\r\n          0,\r\n          this.opts.bigFixedRatio,\r\n          this.opts.bigMinRatio,\r\n          this.opts.bigMaxRatio,\r\n          this.opts.animate,\r\n        );\r\n    } else {\r\n      this.arrange(\r\n        smallOnes,\r\n        WIDTH - offsetLeft,\r\n        HEIGHT - offsetTop,\r\n        offsetLeft,\r\n        offsetTop,\r\n        this.opts.fixedRatio,\r\n        this.opts.minRatio,\r\n        this.opts.maxRatio,\r\n        this.opts.animate,\r\n      );\r\n    }\r\n  }\r\n\r\n  initLayoutContainer(container, opts) {\r\n    this.opts = {\r\n      maxRatio: opts.maxRatio != null ? opts.maxRatio : 3 / 2,\r\n      minRatio: opts.minRatio != null ? opts.minRatio : 9 / 16,\r\n      fixedRatio: opts.fixedRatio != null ? opts.fixedRatio : false,\r\n      animate: opts.animate != null ? opts.animate : false,\r\n      bigClass: opts.bigClass != null ? opts.bigClass : 'OT_big',\r\n      bigPercentage: opts.bigPercentage != null ? opts.bigPercentage : 0.8,\r\n      bigFixedRatio: opts.bigFixedRatio != null ? opts.bigFixedRatio : false,\r\n      bigMaxRatio: opts.bigMaxRatio != null ? opts.bigMaxRatio : 3 / 2,\r\n      bigMinRatio: opts.bigMinRatio != null ? opts.bigMinRatio : 9 / 16,\r\n      bigFirst: opts.bigFirst != null ? opts.bigFirst : true,\r\n    };\r\n    this.layoutContainer = typeof container === 'string' ? $(container) : container;\r\n  }\r\n\r\n  setLayoutOptions(options) {\r\n    this.opts = options;\r\n  }\r\n}\r\nexport default OpenViduLayout;\r\n","class UserModel {\r\n    connectionId;\r\n    audioActive;\r\n    videoActive;\r\n    screenShareActive;\r\n    nickname;\r\n    streamManager;\r\n    type; // 'remote' | 'local'\r\n\r\n    constructor() {\r\n        this.connectionId = '';\r\n        this.audioActive = true;\r\n        this.videoActive = true;\r\n        this.screenShareActive = false;\r\n        this.nickname = '';\r\n        this.streamManager = null;\r\n        this.type = 'local';\r\n    }\r\n\r\n    isAudioActive() {\r\n        return this.audioActive;\r\n    }\r\n\r\n    isVideoActive() {\r\n        return this.videoActive;\r\n    }\r\n\r\n    isScreenShareActive() {\r\n        return this.screenShareActive;\r\n    }\r\n\r\n    getConnectionId() {\r\n        return this.connectionId;\r\n    }\r\n\r\n    getNickname() {\r\n        return this.nickname;\r\n    }\r\n\r\n    getStreamManager() {\r\n        return this.streamManager;\r\n    }\r\n\r\n    isLocal() {\r\n        return this.type === 'local';\r\n    }\r\n    isRemote() {\r\n        return !this.isLocal();\r\n    }\r\n    setAudioActive(isAudioActive) {\r\n        this.audioActive = isAudioActive;\r\n    }\r\n    setVideoActive(isVideoActive) {\r\n        this.videoActive = isVideoActive;\r\n    }\r\n    setScreenShareActive(isScreenShareActive) {\r\n        this.screenShareActive = isScreenShareActive;\r\n    }\r\n    setStreamManager(streamManager) {\r\n        this.streamManager = streamManager;\r\n    }\r\n\r\n    setConnectionId(conecctionId) {\r\n        this.connectionId = conecctionId;\r\n    }\r\n    setNickname(nickname) {\r\n        this.nickname = nickname;\r\n    }\r\n    setType(type) {\r\n        if (type === 'local' |  type === 'remote') {\r\n            this.type = type;\r\n        }\r\n    }\r\n}\r\n\r\nexport default UserModel;\r\n","import React, { Component } from 'react';\r\nimport './ToolbarComponent.css';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nimport Mic from '@material-ui/icons/Mic';\r\nimport MicOff from '@material-ui/icons/MicOff';\r\nimport Videocam from '@material-ui/icons/Videocam';\r\nimport VideocamOff from '@material-ui/icons/VideocamOff';\r\nimport Fullscreen from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExit from '@material-ui/icons/FullscreenExit';\r\nimport SwitchVideoIcon from '@material-ui/icons/SwitchVideo';\r\nimport PictureInPicture from '@material-ui/icons/PictureInPicture';\r\nimport ScreenShare from '@material-ui/icons/ScreenShare';\r\nimport StopScreenShare from '@material-ui/icons/StopScreenShare';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport PowerSettingsNew from '@material-ui/icons/PowerSettingsNew';\r\nimport QuestionAnswer from '@material-ui/icons/QuestionAnswer';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst logo = require('../../assets/images/openvidu_logo.png');\r\n\r\nexport default class ToolbarComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { fullscreen: false };\r\n        this.camStatusChanged = this.camStatusChanged.bind(this);\r\n        this.micStatusChanged = this.micStatusChanged.bind(this);\r\n        this.screenShare = this.screenShare.bind(this);\r\n        this.stopScreenShare = this.stopScreenShare.bind(this);\r\n        this.toggleFullscreen = this.toggleFullscreen.bind(this);\r\n        this.switchCamera = this.switchCamera.bind(this);\r\n        this.leaveSession = this.leaveSession.bind(this);\r\n        this.toggleChat = this.toggleChat.bind(this);\r\n    }\r\n\r\n\r\n    micStatusChanged() {\r\n        this.props.micStatusChanged();\r\n    }\r\n\r\n    camStatusChanged() {\r\n        this.props.camStatusChanged();\r\n    }\r\n\r\n    screenShare() {\r\n        this.props.screenShare();\r\n    }\r\n\r\n    stopScreenShare() {\r\n        this.props.stopScreenShare();\r\n    }\r\n\r\n    toggleFullscreen() {\r\n        this.setState({ fullscreen: !this.state.fullscreen });\r\n        this.props.toggleFullscreen();\r\n    }\r\n\r\n    switchCamera() {\r\n        this.props.switchCamera();\r\n    }\r\n\r\n    leaveSession() {\r\n        this.props.leaveSession();\r\n    }\r\n\r\n    toggleChat() {\r\n        this.props.toggleChat();\r\n    }\r\n\r\n    render() {\r\n        const mySessionId = this.props.sessionId;\r\n        const localUser = this.props.user;\r\n        return (\r\n            <AppBar className=\"toolbar\" id=\"header\">\r\n                <Toolbar className=\"toolbar\">\r\n                    <div id=\"navSessionInfo\">\r\n                        <img\r\n                            id=\"header_img\"\r\n                            alt=\"OpenVidu Logo\"\r\n                            src={logo}\r\n                        />\r\n\r\n                        {this.props.sessionId && <div id=\"titleContent\">\r\n                            <span id=\"session-title\">{mySessionId}</span>\r\n                        </div>}\r\n                    </div>\r\n\r\n                    <div className=\"buttonsContent\">\r\n                        <IconButton color=\"inherit\" className=\"navButton\" id=\"navMicButton\" onClick={this.micStatusChanged}>\r\n                            {localUser !== undefined && localUser.isAudioActive() ? <Mic /> : <MicOff color=\"secondary\" />}\r\n                        </IconButton>\r\n\r\n                        <IconButton color=\"inherit\" className=\"navButton\" id=\"navCamButton\" onClick={this.camStatusChanged}>\r\n                            {localUser !== undefined && localUser.isVideoActive() ? (\r\n                                <Videocam />\r\n                            ) : (\r\n                                <VideocamOff color=\"secondary\" />\r\n                            )}\r\n                        </IconButton>\r\n\r\n                        <IconButton color=\"inherit\" className=\"navButton\" onClick={this.screenShare}>\r\n                            {localUser !== undefined && localUser.isScreenShareActive() ? <PictureInPicture /> : <ScreenShare />}\r\n                        </IconButton>\r\n\r\n                        {localUser !== undefined &&\r\n                            localUser.isScreenShareActive() && (\r\n                                <IconButton onClick={this.stopScreenShare} id=\"navScreenButton\">\r\n                                    <StopScreenShare color=\"secondary\" />\r\n                                </IconButton>\r\n                            )}\r\n\r\n                        <IconButton color=\"inherit\" className=\"navButton\" onClick={this.switchCamera}>\r\n                            <SwitchVideoIcon />\r\n                        </IconButton>\r\n                        <IconButton color=\"inherit\" className=\"navButton\" onClick={this.toggleFullscreen}>\r\n                            {localUser !== undefined && this.state.fullscreen ? <FullscreenExit /> : <Fullscreen />}\r\n                        </IconButton>\r\n                        <IconButton color=\"secondary\" className=\"navButton\" onClick={this.leaveSession} id=\"navLeaveButton\">\r\n                            <PowerSettingsNew />\r\n                        </IconButton>\r\n                         <IconButton color=\"inherit\" onClick={this.toggleChat} id=\"navChatButton\">\r\n                            {this.props.showNotification && <div id=\"point\" className=\"\" />}\r\n                            <Tooltip title=\"Chat\">\r\n                                <QuestionAnswer />\r\n                            </Tooltip>\r\n                        </IconButton>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        );\r\n    }\r\n}\r\n","import axios from 'axios';\r\nimport { OpenVidu } from 'openvidu-browser';\r\nimport React, { Component } from 'react';\r\nimport ChatComponent from './chat/ChatComponent';\r\nimport DialogExtensionComponent from './dialog-extension/DialogExtension';\r\nimport StreamComponent from './stream/StreamComponent';\r\nimport './VideoRoomComponent.css';\r\n\r\nimport OpenViduLayout from '../layout/openvidu-layout';\r\nimport UserModel from '../models/user-model';\r\nimport ToolbarComponent from './toolbar/ToolbarComponent';\r\n\r\nvar localUser = new UserModel();\r\nconst APPLICATION_SERVER_URL = process.env.NODE_ENV === 'https://i10a207.p.ssafy.io:5443/';\r\n\r\nclass VideoRoomComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.hasBeenUpdated = false;\r\n        this.layout = new OpenViduLayout();\r\n        let sessionName = this.props.sessionName ? this.props.sessionName : 'SessionA';\r\n        let userName = this.props.user ? this.props.user : 'OpenVidu_User' + Math.floor(Math.random() * 100);\r\n        this.remotes = [];\r\n        this.localUserAccessAllowed = false;\r\n        this.state = {\r\n            mySessionId: sessionName,\r\n            myUserName: userName,\r\n            session: undefined,\r\n            localUser: undefined,\r\n            subscribers: [],\r\n            chatDisplay: 'none',\r\n            currentVideoDevice: undefined,\r\n        };\r\n\r\n        this.joinSession = this.joinSession.bind(this);\r\n        this.leaveSession = this.leaveSession.bind(this);\r\n        this.onbeforeunload = this.onbeforeunload.bind(this);\r\n        this.updateLayout = this.updateLayout.bind(this);\r\n        this.camStatusChanged = this.camStatusChanged.bind(this);\r\n        this.micStatusChanged = this.micStatusChanged.bind(this);\r\n        this.nicknameChanged = this.nicknameChanged.bind(this);\r\n        this.toggleFullscreen = this.toggleFullscreen.bind(this);\r\n        this.switchCamera = this.switchCamera.bind(this);\r\n        this.screenShare = this.screenShare.bind(this);\r\n        this.stopScreenShare = this.stopScreenShare.bind(this);\r\n        this.closeDialogExtension = this.closeDialogExtension.bind(this);\r\n        this.toggleChat = this.toggleChat.bind(this);\r\n        this.checkNotification = this.checkNotification.bind(this);\r\n        this.checkSize = this.checkSize.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const openViduLayoutOptions = {\r\n            maxRatio: 3 / 2, // The narrowest ratio that will be used (default 2x3)\r\n            minRatio: 9 / 16, // The widest ratio that will be used (default 16x9)\r\n            fixedRatio: false, // If this is true then the aspect ratio of the video is maintained and minRatio and maxRatio are ignored (default false)\r\n            bigClass: 'OV_big', // The class to add to elements that should be sized bigger\r\n            bigPercentage: 0.8, // The maximum percentage of space the big ones should take up\r\n            bigFixedRatio: false, // fixedRatio for the big ones\r\n            bigMaxRatio: 3 / 2, // The narrowest ratio to use for the big elements (default 2x3)\r\n            bigMinRatio: 9 / 16, // The widest ratio to use for the big elements (default 16x9)\r\n            bigFirst: true, // Whether to place the big one in the top left (true) or bottom right\r\n            animate: true, // Whether you want to animate the transitions\r\n        };\r\n\r\n        this.layout.initLayoutContainer(document.getElementById('layout'), openViduLayoutOptions);\r\n        window.addEventListener('beforeunload', this.onbeforeunload);\r\n        window.addEventListener('resize', this.updateLayout);\r\n        window.addEventListener('resize', this.checkSize);\r\n        this.joinSession();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('beforeunload', this.onbeforeunload);\r\n        window.removeEventListener('resize', this.updateLayout);\r\n        window.removeEventListener('resize', this.checkSize);\r\n        this.leaveSession();\r\n    }\r\n\r\n    onbeforeunload(event) {\r\n        this.leaveSession();\r\n    }\r\n\r\n    joinSession() {\r\n        this.OV = new OpenVidu();\r\n\r\n        this.setState(\r\n            {\r\n                session: this.OV.initSession(),\r\n            },\r\n            async () => {\r\n                this.subscribeToStreamCreated();\r\n                await this.connectToSession();\r\n            },\r\n        );\r\n    }\r\n\r\n    async connectToSession() {\r\n        if (this.props.token !== undefined) {\r\n            console.log('token received: ', this.props.token);\r\n            this.connect(this.props.token);\r\n        } else {\r\n            try {\r\n                var token = await this.getToken();\r\n                this.connect(token);\r\n            } catch (error) {\r\n                console.error('There was an error getting the token:', error.code, error.message);\r\n                if(this.props.error){\r\n                    this.props.error({ error: error.error, messgae: error.message, code: error.code, status: error.status });\r\n                }\r\n                alert('There was an error getting the token:', error.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    connect(token) {\r\n        this.state.session\r\n            .connect(\r\n                token,\r\n                { clientData: this.state.myUserName },\r\n            )\r\n            .then(() => {\r\n                this.connectWebCam();\r\n            })\r\n            .catch((error) => {\r\n                if(this.props.error){\r\n                    this.props.error({ error: error.error, messgae: error.message, code: error.code, status: error.status });\r\n                }\r\n                alert('There was an error connecting to the session:', error.message);\r\n                console.log('There was an error connecting to the session:', error.code, error.message);\r\n            });\r\n    }\r\n\r\n    async connectWebCam() {\r\n        await this.OV.getUserMedia({ audioSource: undefined, videoSource: undefined });\r\n        var devices = await this.OV.getDevices();\r\n        var videoDevices = devices.filter(device => device.kind === 'videoinput');\r\n\r\n        let publisher = this.OV.initPublisher(undefined, {\r\n            audioSource: undefined,\r\n            videoSource: videoDevices[0].deviceId,\r\n            publishAudio: localUser.isAudioActive(),\r\n            publishVideo: localUser.isVideoActive(),\r\n            resolution: '640x480',\r\n            frameRate: 30,\r\n            insertMode: 'APPEND',\r\n        });\r\n\r\n        if (this.state.session.capabilities.publish) {\r\n            publisher.on('accessAllowed' , () => {\r\n                this.state.session.publish(publisher).then(() => {\r\n                    this.updateSubscribers();\r\n                    this.localUserAccessAllowed = true;\r\n                    if (this.props.joinSession) {\r\n                        this.props.joinSession();\r\n                    }\r\n                });\r\n            });\r\n\r\n        }\r\n        localUser.setNickname(this.state.myUserName);\r\n        localUser.setConnectionId(this.state.session.connection.connectionId);\r\n        localUser.setScreenShareActive(false);\r\n        localUser.setStreamManager(publisher);\r\n        this.subscribeToUserChanged();\r\n        this.subscribeToStreamDestroyed();\r\n        this.sendSignalUserChanged({ isScreenShareActive: localUser.isScreenShareActive() });\r\n\r\n        this.setState({ currentVideoDevice: videoDevices[0], localUser: localUser }, () => {\r\n            this.state.localUser.getStreamManager().on('streamPlaying', (e) => {\r\n                this.updateLayout();\r\n                publisher.videos[0].video.parentElement.classList.remove('custom-class');\r\n            });\r\n        });\r\n    }\r\n\r\n    updateSubscribers() {\r\n        var subscribers = this.remotes;\r\n        this.setState(\r\n            {\r\n                subscribers: subscribers,\r\n            },\r\n            () => {\r\n                if (this.state.localUser) {\r\n                    this.sendSignalUserChanged({\r\n                        isAudioActive: this.state.localUser.isAudioActive(),\r\n                        isVideoActive: this.state.localUser.isVideoActive(),\r\n                        nickname: this.state.localUser.getNickname(),\r\n                        isScreenShareActive: this.state.localUser.isScreenShareActive(),\r\n                    });\r\n                }\r\n                this.updateLayout();\r\n            },\r\n        );\r\n    }\r\n\r\n    leaveSession() {\r\n        const mySession = this.state.session;\r\n\r\n        if (mySession) {\r\n            mySession.disconnect();\r\n        }\r\n\r\n        // Empty all properties...\r\n        this.OV = null;\r\n        this.setState({\r\n            session: undefined,\r\n            subscribers: [],\r\n            mySessionId: 'SessionA',\r\n            myUserName: 'OpenVidu_User' + Math.floor(Math.random() * 100),\r\n            localUser: undefined,\r\n        });\r\n        if (this.props.leaveSession) {\r\n            this.props.leaveSession();\r\n        }\r\n    }\r\n    camStatusChanged() {\r\n        localUser.setVideoActive(!localUser.isVideoActive());\r\n        localUser.getStreamManager().publishVideo(localUser.isVideoActive());\r\n        this.sendSignalUserChanged({ isVideoActive: localUser.isVideoActive() });\r\n        this.setState({ localUser: localUser });\r\n    }\r\n\r\n    micStatusChanged() {\r\n        localUser.setAudioActive(!localUser.isAudioActive());\r\n        localUser.getStreamManager().publishAudio(localUser.isAudioActive());\r\n        this.sendSignalUserChanged({ isAudioActive: localUser.isAudioActive() });\r\n        this.setState({ localUser: localUser });\r\n    }\r\n\r\n    nicknameChanged(nickname) {\r\n        let localUser = this.state.localUser;\r\n        localUser.setNickname(nickname);\r\n        this.setState({ localUser: localUser });\r\n        this.sendSignalUserChanged({ nickname: this.state.localUser.getNickname() });\r\n    }\r\n\r\n    deleteSubscriber(stream) {\r\n        const remoteUsers = this.state.subscribers;\r\n        const userStream = remoteUsers.filter((user) => user.getStreamManager().stream === stream)[0];\r\n        let index = remoteUsers.indexOf(userStream, 0);\r\n        if (index > -1) {\r\n            remoteUsers.splice(index, 1);\r\n            this.setState({\r\n                subscribers: remoteUsers,\r\n            });\r\n        }\r\n    }\r\n\r\n    subscribeToStreamCreated() {\r\n        this.state.session.on('streamCreated', (event) => {\r\n            const subscriber = this.state.session.subscribe(event.stream, undefined);\r\n            // var subscribers = this.state.subscribers;\r\n            subscriber.on('streamPlaying', (e) => {\r\n                this.checkSomeoneShareScreen();\r\n                subscriber.videos[0].video.parentElement.classList.remove('custom-class');\r\n            });\r\n            const newUser = new UserModel();\r\n            newUser.setStreamManager(subscriber);\r\n            newUser.setConnectionId(event.stream.connection.connectionId);\r\n            newUser.setType('remote');\r\n            const nickname = event.stream.connection.data.split('%')[0];\r\n            newUser.setNickname(JSON.parse(nickname).clientData);\r\n            this.remotes.push(newUser);\r\n            if(this.localUserAccessAllowed) {\r\n                this.updateSubscribers();\r\n            }\r\n        });\r\n    }\r\n\r\n    subscribeToStreamDestroyed() {\r\n        // On every Stream destroyed...\r\n        this.state.session.on('streamDestroyed', (event) => {\r\n            // Remove the stream from 'subscribers' array\r\n            this.deleteSubscriber(event.stream);\r\n            setTimeout(() => {\r\n                this.checkSomeoneShareScreen();\r\n            }, 20);\r\n            event.preventDefault();\r\n            this.updateLayout();\r\n        });\r\n    }\r\n\r\n    subscribeToUserChanged() {\r\n        this.state.session.on('signal:userChanged', (event) => {\r\n            let remoteUsers = this.state.subscribers;\r\n            remoteUsers.forEach((user) => {\r\n                if (user.getConnectionId() === event.from.connectionId) {\r\n                    const data = JSON.parse(event.data);\r\n                    console.log('EVENTO REMOTE: ', event.data);\r\n                    if (data.isAudioActive !== undefined) {\r\n                        user.setAudioActive(data.isAudioActive);\r\n                    }\r\n                    if (data.isVideoActive !== undefined) {\r\n                        user.setVideoActive(data.isVideoActive);\r\n                    }\r\n                    if (data.nickname !== undefined) {\r\n                        user.setNickname(data.nickname);\r\n                    }\r\n                    if (data.isScreenShareActive !== undefined) {\r\n                        user.setScreenShareActive(data.isScreenShareActive);\r\n                    }\r\n                }\r\n            });\r\n            this.setState(\r\n                {\r\n                    subscribers: remoteUsers,\r\n                },\r\n                () => this.checkSomeoneShareScreen(),\r\n            );\r\n        });\r\n    }\r\n\r\n    updateLayout() {\r\n        setTimeout(() => {\r\n            this.layout.updateLayout();\r\n        }, 20);\r\n    }\r\n\r\n    sendSignalUserChanged(data) {\r\n        const signalOptions = {\r\n            data: JSON.stringify(data),\r\n            type: 'userChanged',\r\n        };\r\n        this.state.session.signal(signalOptions);\r\n    }\r\n\r\n    toggleFullscreen() {\r\n        const document = window.document;\r\n        const fs = document.getElementById('container');\r\n        if (\r\n            !document.fullscreenElement &&\r\n            !document.mozFullScreenElement &&\r\n            !document.webkitFullscreenElement &&\r\n            !document.msFullscreenElement\r\n        ) {\r\n            if (fs.requestFullscreen) {\r\n                fs.requestFullscreen();\r\n            } else if (fs.msRequestFullscreen) {\r\n                fs.msRequestFullscreen();\r\n            } else if (fs.mozRequestFullScreen) {\r\n                fs.mozRequestFullScreen();\r\n            } else if (fs.webkitRequestFullscreen) {\r\n                fs.webkitRequestFullscreen();\r\n            }\r\n        } else {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n            } else if (document.msExitFullscreen) {\r\n                document.msExitFullscreen();\r\n            } else if (document.mozCancelFullScreen) {\r\n                document.mozCancelFullScreen();\r\n            } else if (document.webkitExitFullscreen) {\r\n                document.webkitExitFullscreen();\r\n            }\r\n        }\r\n    }\r\n\r\n    async switchCamera() {\r\n        try{\r\n            const devices = await this.OV.getDevices()\r\n            var videoDevices = devices.filter(device => device.kind === 'videoinput');\r\n\r\n            if(videoDevices && videoDevices.length > 1) {\r\n\r\n                var newVideoDevice = videoDevices.filter(device => device.deviceId !== this.state.currentVideoDevice.deviceId)\r\n\r\n                if (newVideoDevice.length > 0) {\r\n                    // Creating a new publisher with specific videoSource\r\n                    // In mobile devices the default and first camera is the front one\r\n                    var newPublisher = this.OV.initPublisher(undefined, {\r\n                        audioSource: undefined,\r\n                        videoSource: newVideoDevice[0].deviceId,\r\n                        publishAudio: localUser.isAudioActive(),\r\n                        publishVideo: localUser.isVideoActive(),\r\n                        mirror: true\r\n                    });\r\n\r\n                    //newPublisher.once(\"accessAllowed\", () => {\r\n                    await this.state.session.unpublish(this.state.localUser.getStreamManager());\r\n                    await this.state.session.publish(newPublisher)\r\n                    this.state.localUser.setStreamManager(newPublisher);\r\n                    this.setState({\r\n                        currentVideoDevice: newVideoDevice,\r\n                        localUser: localUser,\r\n                    });\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    screenShare() {\r\n        const videoSource = navigator.userAgent.indexOf('Firefox') !== -1 ? 'window' : 'screen';\r\n        const publisher = this.OV.initPublisher(\r\n            undefined,\r\n            {\r\n                videoSource: videoSource,\r\n                publishAudio: localUser.isAudioActive(),\r\n                publishVideo: localUser.isVideoActive(),\r\n                mirror: false,\r\n            },\r\n            (error) => {\r\n                if (error && error.name === 'SCREEN_EXTENSION_NOT_INSTALLED') {\r\n                    this.setState({ showExtensionDialog: true });\r\n                } else if (error && error.name === 'SCREEN_SHARING_NOT_SUPPORTED') {\r\n                    alert('Your browser does not support screen sharing');\r\n                } else if (error && error.name === 'SCREEN_EXTENSION_DISABLED') {\r\n                    alert('You need to enable screen sharing extension');\r\n                } else if (error && error.name === 'SCREEN_CAPTURE_DENIED') {\r\n                    alert('You need to choose a window or application to share');\r\n                }\r\n            },\r\n        );\r\n\r\n        publisher.once('accessAllowed', () => {\r\n            this.state.session.unpublish(localUser.getStreamManager());\r\n            localUser.setStreamManager(publisher);\r\n            this.state.session.publish(localUser.getStreamManager()).then(() => {\r\n                localUser.setScreenShareActive(true);\r\n                this.setState({ localUser: localUser }, () => {\r\n                    this.sendSignalUserChanged({ isScreenShareActive: localUser.isScreenShareActive() });\r\n                });\r\n            });\r\n        });\r\n        publisher.on('streamPlaying', () => {\r\n            this.updateLayout();\r\n            publisher.videos[0].video.parentElement.classList.remove('custom-class');\r\n        });\r\n    }\r\n\r\n    closeDialogExtension() {\r\n        this.setState({ showExtensionDialog: false });\r\n    }\r\n\r\n    stopScreenShare() {\r\n        this.state.session.unpublish(localUser.getStreamManager());\r\n        this.connectWebCam();\r\n    }\r\n\r\n    checkSomeoneShareScreen() {\r\n        let isScreenShared;\r\n        // return true if at least one passes the test\r\n        isScreenShared = this.state.subscribers.some((user) => user.isScreenShareActive()) || localUser.isScreenShareActive();\r\n        const openviduLayoutOptions = {\r\n            maxRatio: 3 / 2,\r\n            minRatio: 9 / 16,\r\n            fixedRatio: isScreenShared,\r\n            bigClass: 'OV_big',\r\n            bigPercentage: 0.8,\r\n            bigFixedRatio: false,\r\n            bigMaxRatio: 3 / 2,\r\n            bigMinRatio: 9 / 16,\r\n            bigFirst: true,\r\n            animate: true,\r\n        };\r\n        this.layout.setLayoutOptions(openviduLayoutOptions);\r\n        this.updateLayout();\r\n    }\r\n\r\n    toggleChat(property) {\r\n        let display = property;\r\n\r\n        if (display === undefined) {\r\n            display = this.state.chatDisplay === 'none' ? 'block' : 'none';\r\n        }\r\n        if (display === 'block') {\r\n            this.setState({ chatDisplay: display, messageReceived: false });\r\n        } else {\r\n            console.log('chat', display);\r\n            this.setState({ chatDisplay: display });\r\n        }\r\n        this.updateLayout();\r\n    }\r\n\r\n    checkNotification(event) {\r\n        this.setState({\r\n            messageReceived: this.state.chatDisplay === 'none',\r\n        });\r\n    }\r\n    checkSize() {\r\n        if (document.getElementById('layout').offsetWidth <= 700 && !this.hasBeenUpdated) {\r\n            this.toggleChat('none');\r\n            this.hasBeenUpdated = true;\r\n        }\r\n        if (document.getElementById('layout').offsetWidth > 700 && this.hasBeenUpdated) {\r\n            this.hasBeenUpdated = false;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const mySessionId = this.state.mySessionId;\r\n        const localUser = this.state.localUser;\r\n        var chatDisplay = { display: this.state.chatDisplay };\r\n\r\n        return (\r\n            <div className=\"container\" id=\"container\">\r\n                <ToolbarComponent\r\n                    sessionId={mySessionId}\r\n                    user={localUser}\r\n                    showNotification={this.state.messageReceived}\r\n                    camStatusChanged={this.camStatusChanged}\r\n                    micStatusChanged={this.micStatusChanged}\r\n                    screenShare={this.screenShare}\r\n                    stopScreenShare={this.stopScreenShare}\r\n                    toggleFullscreen={this.toggleFullscreen}\r\n                    switchCamera={this.switchCamera}\r\n                    leaveSession={this.leaveSession}\r\n                    toggleChat={this.toggleChat}\r\n                />\r\n\r\n                <DialogExtensionComponent showDialog={this.state.showExtensionDialog} cancelClicked={this.closeDialogExtension} />\r\n\r\n                <div id=\"layout\" className=\"bounds\">\r\n                    {localUser !== undefined && localUser.getStreamManager() !== undefined && (\r\n                        <div className=\"OT_root OT_publisher custom-class\" id=\"localUser\">\r\n                            <StreamComponent user={localUser} handleNickname={this.nicknameChanged} />\r\n                        </div>\r\n                    )}\r\n                    {this.state.subscribers.map((sub, i) => (\r\n                        <div key={i} className=\"OT_root OT_publisher custom-class\" id=\"remoteUsers\">\r\n                            <StreamComponent user={sub} streamId={sub.streamManager.stream.streamId} />\r\n                        </div>\r\n                    ))}\r\n                    {localUser !== undefined && localUser.getStreamManager() !== undefined && (\r\n                        <div className=\"OT_root OT_publisher custom-class\" style={chatDisplay}>\r\n                            <ChatComponent\r\n                                user={localUser}\r\n                                chatDisplay={this.state.chatDisplay}\r\n                                close={this.toggleChat}\r\n                                messageReceived={this.checkNotification}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * --------------------------------------------\r\n     * GETTING A TOKEN FROM YOUR APPLICATION SERVER\r\n     * --------------------------------------------\r\n     * The methods below request the creation of a Session and a Token to\r\n     * your application server. This keeps your OpenVidu deployment secure.\r\n     *\r\n     * In this sample code, there is no user control at all. Anybody could\r\n     * access your application server endpoints! In a real production\r\n     * environment, your application server must identify the user to allow\r\n     * access to the endpoints.\r\n     *\r\n     * Visit https://docs.openvidu.io/en/stable/application-server to learn\r\n     * more about the integration of OpenVidu in your application server.\r\n     */\r\n    async getToken() {\r\n        const sessionId = await this.createSession(this.state.mySessionId);\r\n        return await this.createToken(sessionId);\r\n    }\r\n\r\n    async createSession(sessionId) {\r\n        const response = await axios.post(APPLICATION_SERVER_URL + 'api/sessions', { customSessionId: sessionId }, {\r\n            headers: { 'Content-Type': 'application/json', },\r\n        });\r\n        return response.data; // The sessionId\r\n    }\r\n\r\n    async createToken(sessionId) {\r\n        const response = await axios.post(APPLICATION_SERVER_URL + 'api/sessions/' + sessionId + '/connections', {}, {\r\n            headers: { 'Content-Type': 'application/json', },\r\n        });\r\n        return response.data; // The token\r\n    }\r\n}\r\nexport default VideoRoomComponent;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport VideoRoomComponent from './components/VideoRoomComponent';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(\r\n  <VideoRoomComponent />, document.getElementById('root')\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}